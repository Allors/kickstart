// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class ObjectOnPostDerive : Allors.Meta.Method
	{
		protected ObjectOnPostDerive(Object @object) : base(@object)
		{
		}
	}

	public partial class SettingsOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SettingsOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Settings.ObjectType, Allors.Meta.M.Settings.OnPostDerive); 

		public SettingsOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SettingsOnPostDeriveMethodInvocation;
			}
		}
	}public partial class EmailMessageOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmailMessageOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailMessage.ObjectType, Allors.Meta.M.EmailMessage.OnPostDerive); 

		public EmailMessageOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailMessageOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AccessControlOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccessControlOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccessControl.ObjectType, Allors.Meta.M.AccessControl.OnPostDerive); 

		public AccessControlOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccessControlOnPostDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Organisation.ObjectType, Allors.Meta.M.Organisation.OnPostDerive); 

		public OrganisationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PersonOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Person.ObjectType, Allors.Meta.M.Person.OnPostDerive); 

		public PersonOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonOnPostDeriveMethodInvocation;
			}
		}
	}public partial class MediaOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Media.ObjectType, Allors.Meta.M.Media.OnPostDerive); 

		public MediaOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaOnPostDeriveMethodInvocation;
			}
		}
	}public partial class MediaContentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaContentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MediaContent.ObjectType, Allors.Meta.M.MediaContent.OnPostDerive); 

		public MediaContentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaContentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TemplateOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TemplateOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Template.ObjectType, Allors.Meta.M.Template.OnPostDerive); 

		public TemplateOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TemplateOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TemplateTypeOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TemplateTypeOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TemplateType.ObjectType, Allors.Meta.M.TemplateType.OnPostDerive); 

		public TemplateTypeOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TemplateTypeOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PreparedExtentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PreparedExtentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PreparedExtent.ObjectType, Allors.Meta.M.PreparedExtent.OnPostDerive); 

		public PreparedExtentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PreparedExtentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PreparedFetchOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PreparedFetchOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PreparedFetch.ObjectType, Allors.Meta.M.PreparedFetch.OnPostDerive); 

		public PreparedFetchOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PreparedFetchOnPostDeriveMethodInvocation;
			}
		}
	}public partial class LocalisedTextOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LocalisedTextOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LocalisedText.ObjectType, Allors.Meta.M.LocalisedText.OnPostDerive); 

		public LocalisedTextOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocalisedTextOnPostDeriveMethodInvocation;
			}
		}
	}public partial class LoginOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LoginOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Login.ObjectType, Allors.Meta.M.Login.OnPostDerive); 

		public LoginOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LoginOnPostDeriveMethodInvocation;
			}
		}
	}public partial class PermissionOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PermissionOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Permission.ObjectType, Allors.Meta.M.Permission.OnPostDerive); 

		public PermissionOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PermissionOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SecurityTokenOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SecurityTokenOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SecurityToken.ObjectType, Allors.Meta.M.SecurityToken.OnPostDerive); 

		public SecurityTokenOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecurityTokenOnPostDeriveMethodInvocation;
			}
		}
	}public partial class NotificationListOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NotificationListOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NotificationList.ObjectType, Allors.Meta.M.NotificationList.OnPostDerive); 

		public NotificationListOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NotificationListOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TaskAssignmentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaskAssignmentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaskAssignment.ObjectType, Allors.Meta.M.TaskAssignment.OnPostDerive); 

		public TaskAssignmentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskAssignmentOnPostDeriveMethodInvocation;
			}
		}
	}public partial class TaskListOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaskListOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaskList.ObjectType, Allors.Meta.M.TaskList.OnPostDerive); 

		public TaskListOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskListOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CounterOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CounterOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Counter.ObjectType, Allors.Meta.M.Counter.OnPostDerive); 

		public CounterOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CounterOnPostDeriveMethodInvocation;
			}
		}
	}public partial class RoleOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RoleOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Role.ObjectType, Allors.Meta.M.Role.OnPostDerive); 

		public RoleOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RoleOnPostDeriveMethodInvocation;
			}
		}
	}public partial class UserGroupOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UserGroupOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UserGroup.ObjectType, Allors.Meta.M.UserGroup.OnPostDerive); 

		public UserGroupOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UserGroupOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CurrencyOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CurrencyOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Currency.ObjectType, Allors.Meta.M.Currency.OnPostDerive); 

		public CurrencyOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CurrencyOnPostDeriveMethodInvocation;
			}
		}
	}public partial class SingletonOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SingletonOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Singleton.ObjectType, Allors.Meta.M.Singleton.OnPostDerive); 

		public SingletonOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SingletonOnPostDeriveMethodInvocation;
			}
		}
	}public partial class CountryOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CountryOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Country.ObjectType, Allors.Meta.M.Country.OnPostDerive); 

		public CountryOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountryOnPostDeriveMethodInvocation;
			}
		}
	}public partial class LanguageOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LanguageOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Language.ObjectType, Allors.Meta.M.Language.OnPostDerive); 

		public LanguageOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LanguageOnPostDeriveMethodInvocation;
			}
		}
	}public partial class LocaleOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LocaleOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Locale.ObjectType, Allors.Meta.M.Locale.OnPostDerive); 

		public LocaleOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocaleOnPostDeriveMethodInvocation;
			}
		}
	}public partial class NotificationOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NotificationOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Notification.ObjectType, Allors.Meta.M.Notification.OnPostDerive); 

		public NotificationOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NotificationOnPostDeriveMethodInvocation;
			}
		}
	}public partial class AutomatedAgentOnPostDerive : ObjectOnPostDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AutomatedAgentOnPostDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AutomatedAgent.ObjectType, Allors.Meta.M.AutomatedAgent.OnPostDerive); 

		public AutomatedAgentOnPostDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AutomatedAgentOnPostDeriveMethodInvocation;
			}
		}
	}
}