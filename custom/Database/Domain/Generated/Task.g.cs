// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial interface Task :  AccessControlledObject,UniquelyIdentifiable,Deletable, Allors.IObject
	{


		WorkItem WorkItem
		{ 
			get;
			set;
		}

		bool ExistWorkItem
		{
			get;
		}

		void RemoveWorkItem();


		global::System.DateTime DateCreated 
		{
			get;
			set;
		}

		bool ExistDateCreated{get;}

		void RemoveDateCreated();


		global::System.DateTime? DateClosed 
		{
			get;
			set;
		}

		bool ExistDateClosed{get;}

		void RemoveDateClosed();


		global::Allors.Extent<Person> Participants
		{ 
			get;
			set;
		}

		void AddParticipant (Person value);

		void RemoveParticipant (Person value);

		bool ExistParticipants
		{
			get;
		}

		void RemoveParticipants();


		Person Performer
		{ 
			get;
			set;
		}

		bool ExistPerformer
		{
			get;
		}

		void RemovePerformer();



		global::Allors.Extent<TaskAssignment> TaskAssignmentsWhereTask
		{ 
			get;
		}

		bool ExistTaskAssignmentsWhereTask
		{
			get;
		}

	}

	public partial interface TaskBuilder : AccessControlledObjectBuilder ,UniquelyIdentifiableBuilder ,DeletableBuilder , global::System.IDisposable
	{	
		global::System.DateTime? DateClosed {get;}
		


		global::System.Collections.Generic.List<Person> Participants {get;}		

		

		Person Performer {get;}

		

	}

	public partial class Tasks : global::Allors.ObjectsBase<Task>
	{
		public Tasks(Allors.ISession session) : base(session)
		{
		}

		public Allors.Meta.MetaTask Meta
		{
			get
			{
				return Allors.Meta.MetaTask.Instance;
			}
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}