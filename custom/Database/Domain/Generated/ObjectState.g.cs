// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial interface ObjectState :  UniquelyIdentifiable, Allors.IObject
	{


		global::Allors.Extent<Permission> DeniedPermissions
		{ 
			get;
			set;
		}

		void AddDeniedPermission (Permission value);

		void RemoveDeniedPermission (Permission value);

		bool ExistDeniedPermissions
		{
			get;
		}

		void RemoveDeniedPermissions();


		global::System.String Name 
		{
			get;
			set;
		}

		bool ExistName{get;}

		void RemoveName();



		global::Allors.Extent<Transitional> TransitionalsWherePreviousObjectState
		{ 
			get;
		}

		bool ExistTransitionalsWherePreviousObjectState
		{
			get;
		}


		global::Allors.Extent<Transitional> TransitionalsWhereLastObjectState
		{ 
			get;
		}

		bool ExistTransitionalsWhereLastObjectState
		{
			get;
		}


		global::Allors.Extent<Transitional> TransitionalsWhereObjectState
		{ 
			get;
		}

		bool ExistTransitionalsWhereObjectState
		{
			get;
		}


		global::Allors.Extent<TransitionalVersion> TransitionalVersionsWherePreviousObjectState
		{ 
			get;
		}

		bool ExistTransitionalVersionsWherePreviousObjectState
		{
			get;
		}


		global::Allors.Extent<TransitionalVersion> TransitionalVersionsWhereLastObjectState
		{ 
			get;
		}

		bool ExistTransitionalVersionsWhereLastObjectState
		{
			get;
		}


		global::Allors.Extent<TransitionalVersion> TransitionalVersionsWhereObjectState
		{ 
			get;
		}

		bool ExistTransitionalVersionsWhereObjectState
		{
			get;
		}

	}

	public partial interface ObjectStateBuilder : UniquelyIdentifiableBuilder , global::System.IDisposable
	{	

		global::System.Collections.Generic.List<Permission> DeniedPermissions {get;}		

		

		global::System.String Name {get;}
		

	}

	public partial class ObjectStates : global::Allors.ObjectsBase<ObjectState>
	{
		public ObjectStates(Allors.ISession session) : base(session)
		{
		}

		public Allors.Meta.MetaObjectState Meta
		{
			get
			{
				return Allors.Meta.MetaObjectState.Instance;
			}
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}