// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial interface User :  SecurityTokenOwner,AccessControlledObject, Allors.IObject
	{


		global::System.String UserName 
		{
			get;
			set;
		}

		bool ExistUserName{get;}

		void RemoveUserName();


		global::System.String NormalizedUserName 
		{
			get;
			set;
		}

		bool ExistNormalizedUserName{get;}

		void RemoveNormalizedUserName();


		global::System.String UserPasswordHash 
		{
			get;
			set;
		}

		bool ExistUserPasswordHash{get;}

		void RemoveUserPasswordHash();


		global::System.String UserEmail 
		{
			get;
			set;
		}

		bool ExistUserEmail{get;}

		void RemoveUserEmail();


		global::System.Boolean? UserEmailConfirmed 
		{
			get;
			set;
		}

		bool ExistUserEmailConfirmed{get;}

		void RemoveUserEmailConfirmed();


		TaskList TaskList
		{ 
			get;
			set;
		}

		bool ExistTaskList
		{
			get;
		}

		void RemoveTaskList();


		NotificationList NotificationList
		{ 
			get;
			set;
		}

		bool ExistNotificationList
		{
			get;
		}

		void RemoveNotificationList();



		Singleton SingletonWhereGuest
		{
			get;
		}

		bool ExistSingletonWhereGuest
		{
			get;
		}


		global::Allors.Extent<AccessControl> AccessControlsWhereSubject
		{ 
			get;
		}

		bool ExistAccessControlsWhereSubject
		{
			get;
		}


		global::Allors.Extent<AccessControl> AccessControlsWhereEffectiveUser
		{ 
			get;
		}

		bool ExistAccessControlsWhereEffectiveUser
		{
			get;
		}


		global::Allors.Extent<Login> LoginsWhereUser
		{ 
			get;
		}

		bool ExistLoginsWhereUser
		{
			get;
		}


		global::Allors.Extent<EmailMessage> EmailMessagesWhereSender
		{ 
			get;
		}

		bool ExistEmailMessagesWhereSender
		{
			get;
		}


		global::Allors.Extent<EmailMessage> EmailMessagesWhereRecipient
		{ 
			get;
		}

		bool ExistEmailMessagesWhereRecipient
		{
			get;
		}


		global::Allors.Extent<TaskAssignment> TaskAssignmentsWhereUser
		{ 
			get;
		}

		bool ExistTaskAssignmentsWhereUser
		{
			get;
		}


		global::Allors.Extent<UserGroup> UserGroupsWhereMember
		{ 
			get;
		}

		bool ExistUserGroupsWhereMember
		{
			get;
		}

	}

	public partial interface UserBuilder : SecurityTokenOwnerBuilder ,AccessControlledObjectBuilder , global::System.IDisposable
	{	
		global::System.String UserName {get;}
		

		global::System.String NormalizedUserName {get;}
		

		global::System.String UserPasswordHash {get;}
		

		global::System.String UserEmail {get;}
		

		global::System.Boolean? UserEmailConfirmed {get;}
		

		NotificationList NotificationList {get;}

		

	}

	public partial class Users : global::Allors.ObjectsBase<User>
	{
		public Users(Allors.ISession session) : base(session)
		{
		}

		public Allors.Meta.MetaUser Meta
		{
			get
			{
				return Allors.Meta.MetaUser.Instance;
			}
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}