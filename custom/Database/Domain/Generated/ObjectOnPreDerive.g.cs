// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class ObjectOnPreDerive : Allors.Meta.Method
	{
		protected ObjectOnPreDerive(Object @object) : base(@object)
		{
		}
	}

	public partial class SettingsOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SettingsOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Settings.ObjectType, Allors.Meta.M.Settings.OnPreDerive); 

		public SettingsOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SettingsOnPreDeriveMethodInvocation;
			}
		}
	}public partial class EmailMessageOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmailMessageOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailMessage.ObjectType, Allors.Meta.M.EmailMessage.OnPreDerive); 

		public EmailMessageOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailMessageOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AccessControlOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccessControlOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccessControl.ObjectType, Allors.Meta.M.AccessControl.OnPreDerive); 

		public AccessControlOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccessControlOnPreDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Organisation.ObjectType, Allors.Meta.M.Organisation.OnPreDerive); 

		public OrganisationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PersonOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Person.ObjectType, Allors.Meta.M.Person.OnPreDerive); 

		public PersonOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonOnPreDeriveMethodInvocation;
			}
		}
	}public partial class MediaOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Media.ObjectType, Allors.Meta.M.Media.OnPreDerive); 

		public MediaOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaOnPreDeriveMethodInvocation;
			}
		}
	}public partial class MediaContentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaContentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MediaContent.ObjectType, Allors.Meta.M.MediaContent.OnPreDerive); 

		public MediaContentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaContentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TemplateOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TemplateOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Template.ObjectType, Allors.Meta.M.Template.OnPreDerive); 

		public TemplateOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TemplateOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TemplateTypeOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TemplateTypeOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TemplateType.ObjectType, Allors.Meta.M.TemplateType.OnPreDerive); 

		public TemplateTypeOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TemplateTypeOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PreparedExtentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PreparedExtentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PreparedExtent.ObjectType, Allors.Meta.M.PreparedExtent.OnPreDerive); 

		public PreparedExtentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PreparedExtentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PreparedFetchOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PreparedFetchOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PreparedFetch.ObjectType, Allors.Meta.M.PreparedFetch.OnPreDerive); 

		public PreparedFetchOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PreparedFetchOnPreDeriveMethodInvocation;
			}
		}
	}public partial class LocalisedTextOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LocalisedTextOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LocalisedText.ObjectType, Allors.Meta.M.LocalisedText.OnPreDerive); 

		public LocalisedTextOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocalisedTextOnPreDeriveMethodInvocation;
			}
		}
	}public partial class LoginOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LoginOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Login.ObjectType, Allors.Meta.M.Login.OnPreDerive); 

		public LoginOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LoginOnPreDeriveMethodInvocation;
			}
		}
	}public partial class PermissionOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PermissionOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Permission.ObjectType, Allors.Meta.M.Permission.OnPreDerive); 

		public PermissionOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PermissionOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SecurityTokenOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SecurityTokenOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SecurityToken.ObjectType, Allors.Meta.M.SecurityToken.OnPreDerive); 

		public SecurityTokenOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecurityTokenOnPreDeriveMethodInvocation;
			}
		}
	}public partial class NotificationListOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NotificationListOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NotificationList.ObjectType, Allors.Meta.M.NotificationList.OnPreDerive); 

		public NotificationListOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NotificationListOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TaskAssignmentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaskAssignmentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaskAssignment.ObjectType, Allors.Meta.M.TaskAssignment.OnPreDerive); 

		public TaskAssignmentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskAssignmentOnPreDeriveMethodInvocation;
			}
		}
	}public partial class TaskListOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaskListOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaskList.ObjectType, Allors.Meta.M.TaskList.OnPreDerive); 

		public TaskListOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskListOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CounterOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CounterOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Counter.ObjectType, Allors.Meta.M.Counter.OnPreDerive); 

		public CounterOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CounterOnPreDeriveMethodInvocation;
			}
		}
	}public partial class RoleOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RoleOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Role.ObjectType, Allors.Meta.M.Role.OnPreDerive); 

		public RoleOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RoleOnPreDeriveMethodInvocation;
			}
		}
	}public partial class UserGroupOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UserGroupOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UserGroup.ObjectType, Allors.Meta.M.UserGroup.OnPreDerive); 

		public UserGroupOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UserGroupOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CurrencyOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CurrencyOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Currency.ObjectType, Allors.Meta.M.Currency.OnPreDerive); 

		public CurrencyOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CurrencyOnPreDeriveMethodInvocation;
			}
		}
	}public partial class SingletonOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SingletonOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Singleton.ObjectType, Allors.Meta.M.Singleton.OnPreDerive); 

		public SingletonOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SingletonOnPreDeriveMethodInvocation;
			}
		}
	}public partial class CountryOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CountryOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Country.ObjectType, Allors.Meta.M.Country.OnPreDerive); 

		public CountryOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountryOnPreDeriveMethodInvocation;
			}
		}
	}public partial class LanguageOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LanguageOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Language.ObjectType, Allors.Meta.M.Language.OnPreDerive); 

		public LanguageOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LanguageOnPreDeriveMethodInvocation;
			}
		}
	}public partial class LocaleOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LocaleOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Locale.ObjectType, Allors.Meta.M.Locale.OnPreDerive); 

		public LocaleOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocaleOnPreDeriveMethodInvocation;
			}
		}
	}public partial class NotificationOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NotificationOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Notification.ObjectType, Allors.Meta.M.Notification.OnPreDerive); 

		public NotificationOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NotificationOnPreDeriveMethodInvocation;
			}
		}
	}public partial class AutomatedAgentOnPreDerive : ObjectOnPreDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AutomatedAgentOnPreDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AutomatedAgent.ObjectType, Allors.Meta.M.AutomatedAgent.OnPreDerive); 

		public AutomatedAgentOnPreDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AutomatedAgentOnPreDeriveMethodInvocation;
			}
		}
	}
}