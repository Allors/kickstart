// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class ObjectOnPostBuild : Allors.Meta.Method
	{
		protected ObjectOnPostBuild(Object @object) : base(@object)
		{
		}
	}

	public partial class SettingsOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SettingsOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Settings.ObjectType, Allors.Meta.M.Settings.OnPostBuild); 

		public SettingsOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SettingsOnPostBuildMethodInvocation;
			}
		}
	}public partial class EmailMessageOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmailMessageOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailMessage.ObjectType, Allors.Meta.M.EmailMessage.OnPostBuild); 

		public EmailMessageOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailMessageOnPostBuildMethodInvocation;
			}
		}
	}public partial class AccessControlOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccessControlOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccessControl.ObjectType, Allors.Meta.M.AccessControl.OnPostBuild); 

		public AccessControlOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccessControlOnPostBuildMethodInvocation;
			}
		}
	}public partial class OrganisationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Organisation.ObjectType, Allors.Meta.M.Organisation.OnPostBuild); 

		public OrganisationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationOnPostBuildMethodInvocation;
			}
		}
	}public partial class PersonOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PersonOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Person.ObjectType, Allors.Meta.M.Person.OnPostBuild); 

		public PersonOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonOnPostBuildMethodInvocation;
			}
		}
	}public partial class MediaOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MediaOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Media.ObjectType, Allors.Meta.M.Media.OnPostBuild); 

		public MediaOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaOnPostBuildMethodInvocation;
			}
		}
	}public partial class MediaContentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MediaContentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MediaContent.ObjectType, Allors.Meta.M.MediaContent.OnPostBuild); 

		public MediaContentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaContentOnPostBuildMethodInvocation;
			}
		}
	}public partial class TemplateOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TemplateOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Template.ObjectType, Allors.Meta.M.Template.OnPostBuild); 

		public TemplateOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TemplateOnPostBuildMethodInvocation;
			}
		}
	}public partial class TemplateTypeOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TemplateTypeOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TemplateType.ObjectType, Allors.Meta.M.TemplateType.OnPostBuild); 

		public TemplateTypeOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TemplateTypeOnPostBuildMethodInvocation;
			}
		}
	}public partial class PreparedExtentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PreparedExtentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PreparedExtent.ObjectType, Allors.Meta.M.PreparedExtent.OnPostBuild); 

		public PreparedExtentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PreparedExtentOnPostBuildMethodInvocation;
			}
		}
	}public partial class PreparedFetchOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PreparedFetchOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PreparedFetch.ObjectType, Allors.Meta.M.PreparedFetch.OnPostBuild); 

		public PreparedFetchOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PreparedFetchOnPostBuildMethodInvocation;
			}
		}
	}public partial class LocalisedTextOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LocalisedTextOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LocalisedText.ObjectType, Allors.Meta.M.LocalisedText.OnPostBuild); 

		public LocalisedTextOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocalisedTextOnPostBuildMethodInvocation;
			}
		}
	}public partial class LoginOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LoginOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Login.ObjectType, Allors.Meta.M.Login.OnPostBuild); 

		public LoginOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LoginOnPostBuildMethodInvocation;
			}
		}
	}public partial class PermissionOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PermissionOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Permission.ObjectType, Allors.Meta.M.Permission.OnPostBuild); 

		public PermissionOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PermissionOnPostBuildMethodInvocation;
			}
		}
	}public partial class SecurityTokenOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SecurityTokenOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SecurityToken.ObjectType, Allors.Meta.M.SecurityToken.OnPostBuild); 

		public SecurityTokenOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecurityTokenOnPostBuildMethodInvocation;
			}
		}
	}public partial class NotificationListOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NotificationListOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NotificationList.ObjectType, Allors.Meta.M.NotificationList.OnPostBuild); 

		public NotificationListOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NotificationListOnPostBuildMethodInvocation;
			}
		}
	}public partial class TaskAssignmentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TaskAssignmentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaskAssignment.ObjectType, Allors.Meta.M.TaskAssignment.OnPostBuild); 

		public TaskAssignmentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskAssignmentOnPostBuildMethodInvocation;
			}
		}
	}public partial class TaskListOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TaskListOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaskList.ObjectType, Allors.Meta.M.TaskList.OnPostBuild); 

		public TaskListOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskListOnPostBuildMethodInvocation;
			}
		}
	}public partial class CounterOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CounterOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Counter.ObjectType, Allors.Meta.M.Counter.OnPostBuild); 

		public CounterOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CounterOnPostBuildMethodInvocation;
			}
		}
	}public partial class RoleOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RoleOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Role.ObjectType, Allors.Meta.M.Role.OnPostBuild); 

		public RoleOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RoleOnPostBuildMethodInvocation;
			}
		}
	}public partial class UserGroupOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation UserGroupOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UserGroup.ObjectType, Allors.Meta.M.UserGroup.OnPostBuild); 

		public UserGroupOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UserGroupOnPostBuildMethodInvocation;
			}
		}
	}public partial class CurrencyOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CurrencyOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Currency.ObjectType, Allors.Meta.M.Currency.OnPostBuild); 

		public CurrencyOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CurrencyOnPostBuildMethodInvocation;
			}
		}
	}public partial class SingletonOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SingletonOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Singleton.ObjectType, Allors.Meta.M.Singleton.OnPostBuild); 

		public SingletonOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SingletonOnPostBuildMethodInvocation;
			}
		}
	}public partial class CountryOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CountryOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Country.ObjectType, Allors.Meta.M.Country.OnPostBuild); 

		public CountryOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountryOnPostBuildMethodInvocation;
			}
		}
	}public partial class LanguageOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LanguageOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Language.ObjectType, Allors.Meta.M.Language.OnPostBuild); 

		public LanguageOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LanguageOnPostBuildMethodInvocation;
			}
		}
	}public partial class LocaleOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LocaleOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Locale.ObjectType, Allors.Meta.M.Locale.OnPostBuild); 

		public LocaleOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocaleOnPostBuildMethodInvocation;
			}
		}
	}public partial class NotificationOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NotificationOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Notification.ObjectType, Allors.Meta.M.Notification.OnPostBuild); 

		public NotificationOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NotificationOnPostBuildMethodInvocation;
			}
		}
	}public partial class AutomatedAgentOnPostBuild : ObjectOnPostBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AutomatedAgentOnPostBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AutomatedAgent.ObjectType, Allors.Meta.M.AutomatedAgent.OnPostBuild); 

		public AutomatedAgentOnPostBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AutomatedAgentOnPostBuildMethodInvocation;
			}
		}
	}
}