// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class ObjectOnDerive : Allors.Meta.Method
	{
		protected ObjectOnDerive(Object @object) : base(@object)
		{
		}
	}

	public partial class SettingsOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SettingsOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Settings.ObjectType, Allors.Meta.M.Settings.OnDerive); 

		public SettingsOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SettingsOnDeriveMethodInvocation;
			}
		}
	}public partial class EmailMessageOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation EmailMessageOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailMessage.ObjectType, Allors.Meta.M.EmailMessage.OnDerive); 

		public EmailMessageOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailMessageOnDeriveMethodInvocation;
			}
		}
	}public partial class AccessControlOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AccessControlOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccessControl.ObjectType, Allors.Meta.M.AccessControl.OnDerive); 

		public AccessControlOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccessControlOnDeriveMethodInvocation;
			}
		}
	}public partial class OrganisationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Organisation.ObjectType, Allors.Meta.M.Organisation.OnDerive); 

		public OrganisationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationOnDeriveMethodInvocation;
			}
		}
	}public partial class PersonOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PersonOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Person.ObjectType, Allors.Meta.M.Person.OnDerive); 

		public PersonOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonOnDeriveMethodInvocation;
			}
		}
	}public partial class MediaOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Media.ObjectType, Allors.Meta.M.Media.OnDerive); 

		public MediaOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaOnDeriveMethodInvocation;
			}
		}
	}public partial class MediaContentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation MediaContentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MediaContent.ObjectType, Allors.Meta.M.MediaContent.OnDerive); 

		public MediaContentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaContentOnDeriveMethodInvocation;
			}
		}
	}public partial class TemplateOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TemplateOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Template.ObjectType, Allors.Meta.M.Template.OnDerive); 

		public TemplateOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TemplateOnDeriveMethodInvocation;
			}
		}
	}public partial class TemplateTypeOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TemplateTypeOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TemplateType.ObjectType, Allors.Meta.M.TemplateType.OnDerive); 

		public TemplateTypeOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TemplateTypeOnDeriveMethodInvocation;
			}
		}
	}public partial class PreparedExtentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PreparedExtentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PreparedExtent.ObjectType, Allors.Meta.M.PreparedExtent.OnDerive); 

		public PreparedExtentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PreparedExtentOnDeriveMethodInvocation;
			}
		}
	}public partial class PreparedFetchOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PreparedFetchOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PreparedFetch.ObjectType, Allors.Meta.M.PreparedFetch.OnDerive); 

		public PreparedFetchOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PreparedFetchOnDeriveMethodInvocation;
			}
		}
	}public partial class LocalisedTextOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LocalisedTextOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LocalisedText.ObjectType, Allors.Meta.M.LocalisedText.OnDerive); 

		public LocalisedTextOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocalisedTextOnDeriveMethodInvocation;
			}
		}
	}public partial class LoginOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LoginOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Login.ObjectType, Allors.Meta.M.Login.OnDerive); 

		public LoginOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LoginOnDeriveMethodInvocation;
			}
		}
	}public partial class PermissionOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation PermissionOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Permission.ObjectType, Allors.Meta.M.Permission.OnDerive); 

		public PermissionOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PermissionOnDeriveMethodInvocation;
			}
		}
	}public partial class SecurityTokenOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SecurityTokenOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SecurityToken.ObjectType, Allors.Meta.M.SecurityToken.OnDerive); 

		public SecurityTokenOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecurityTokenOnDeriveMethodInvocation;
			}
		}
	}public partial class NotificationListOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NotificationListOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NotificationList.ObjectType, Allors.Meta.M.NotificationList.OnDerive); 

		public NotificationListOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NotificationListOnDeriveMethodInvocation;
			}
		}
	}public partial class TaskAssignmentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaskAssignmentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaskAssignment.ObjectType, Allors.Meta.M.TaskAssignment.OnDerive); 

		public TaskAssignmentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskAssignmentOnDeriveMethodInvocation;
			}
		}
	}public partial class TaskListOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation TaskListOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaskList.ObjectType, Allors.Meta.M.TaskList.OnDerive); 

		public TaskListOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskListOnDeriveMethodInvocation;
			}
		}
	}public partial class CounterOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CounterOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Counter.ObjectType, Allors.Meta.M.Counter.OnDerive); 

		public CounterOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CounterOnDeriveMethodInvocation;
			}
		}
	}public partial class RoleOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation RoleOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Role.ObjectType, Allors.Meta.M.Role.OnDerive); 

		public RoleOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RoleOnDeriveMethodInvocation;
			}
		}
	}public partial class UserGroupOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation UserGroupOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UserGroup.ObjectType, Allors.Meta.M.UserGroup.OnDerive); 

		public UserGroupOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UserGroupOnDeriveMethodInvocation;
			}
		}
	}public partial class CurrencyOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CurrencyOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Currency.ObjectType, Allors.Meta.M.Currency.OnDerive); 

		public CurrencyOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CurrencyOnDeriveMethodInvocation;
			}
		}
	}public partial class SingletonOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation SingletonOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Singleton.ObjectType, Allors.Meta.M.Singleton.OnDerive); 

		public SingletonOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SingletonOnDeriveMethodInvocation;
			}
		}
	}public partial class CountryOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation CountryOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Country.ObjectType, Allors.Meta.M.Country.OnDerive); 

		public CountryOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountryOnDeriveMethodInvocation;
			}
		}
	}public partial class LanguageOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LanguageOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Language.ObjectType, Allors.Meta.M.Language.OnDerive); 

		public LanguageOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LanguageOnDeriveMethodInvocation;
			}
		}
	}public partial class LocaleOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation LocaleOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Locale.ObjectType, Allors.Meta.M.Locale.OnDerive); 

		public LocaleOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocaleOnDeriveMethodInvocation;
			}
		}
	}public partial class NotificationOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation NotificationOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Notification.ObjectType, Allors.Meta.M.Notification.OnDerive); 

		public NotificationOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NotificationOnDeriveMethodInvocation;
			}
		}
	}public partial class AutomatedAgentOnDerive : ObjectOnDerive
	{
	    private static readonly Allors.Meta.MethodInvocation AutomatedAgentOnDeriveMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AutomatedAgent.ObjectType, Allors.Meta.M.AutomatedAgent.OnDerive); 

		public AutomatedAgentOnDerive(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AutomatedAgentOnDeriveMethodInvocation;
			}
		}
	}
}