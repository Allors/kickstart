// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial interface Object : Allors.IObject
	{


		ObjectOnBuild OnBuild();

		ObjectOnBuild OnBuild(System.Action<ObjectOnBuild> action);

		ObjectOnPostBuild OnPostBuild();

		ObjectOnPostBuild OnPostBuild(System.Action<ObjectOnPostBuild> action);

		ObjectOnPreDerive OnPreDerive();

		ObjectOnPreDerive OnPreDerive(System.Action<ObjectOnPreDerive> action);

		ObjectOnDerive OnDerive();

		ObjectOnDerive OnDerive(System.Action<ObjectOnDerive> action);

		ObjectOnPostDerive OnPostDerive();

		ObjectOnPostDerive OnPostDerive(System.Action<ObjectOnPostDerive> action);
	}

	public partial interface ObjectBuilder :  global::System.IDisposable
	{	
	}

	public partial class Objects : global::Allors.ObjectsBase<Object>
	{
		public Objects(Allors.ISession session) : base(session)
		{
		}

		public Allors.Meta.MetaObject Meta
		{
			get
			{
				return Allors.Meta.MetaObject.Instance;
			}
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}