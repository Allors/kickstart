// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public abstract partial class ObjectOnBuild : Allors.Meta.Method
	{
		protected ObjectOnBuild(Object @object) : base(@object)
		{
		}
	}

	public partial class SettingsOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SettingsOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Settings.ObjectType, Allors.Meta.M.Settings.OnBuild); 

		public SettingsOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SettingsOnBuildMethodInvocation;
			}
		}
	}public partial class EmailMessageOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation EmailMessageOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.EmailMessage.ObjectType, Allors.Meta.M.EmailMessage.OnBuild); 

		public EmailMessageOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return EmailMessageOnBuildMethodInvocation;
			}
		}
	}public partial class AccessControlOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AccessControlOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AccessControl.ObjectType, Allors.Meta.M.AccessControl.OnBuild); 

		public AccessControlOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AccessControlOnBuildMethodInvocation;
			}
		}
	}public partial class OrganisationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation OrganisationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Organisation.ObjectType, Allors.Meta.M.Organisation.OnBuild); 

		public OrganisationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return OrganisationOnBuildMethodInvocation;
			}
		}
	}public partial class PersonOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PersonOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Person.ObjectType, Allors.Meta.M.Person.OnBuild); 

		public PersonOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PersonOnBuildMethodInvocation;
			}
		}
	}public partial class MediaOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MediaOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Media.ObjectType, Allors.Meta.M.Media.OnBuild); 

		public MediaOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaOnBuildMethodInvocation;
			}
		}
	}public partial class MediaContentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation MediaContentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.MediaContent.ObjectType, Allors.Meta.M.MediaContent.OnBuild); 

		public MediaContentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return MediaContentOnBuildMethodInvocation;
			}
		}
	}public partial class TemplateOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TemplateOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Template.ObjectType, Allors.Meta.M.Template.OnBuild); 

		public TemplateOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TemplateOnBuildMethodInvocation;
			}
		}
	}public partial class TemplateTypeOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TemplateTypeOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TemplateType.ObjectType, Allors.Meta.M.TemplateType.OnBuild); 

		public TemplateTypeOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TemplateTypeOnBuildMethodInvocation;
			}
		}
	}public partial class PreparedExtentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PreparedExtentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PreparedExtent.ObjectType, Allors.Meta.M.PreparedExtent.OnBuild); 

		public PreparedExtentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PreparedExtentOnBuildMethodInvocation;
			}
		}
	}public partial class PreparedFetchOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PreparedFetchOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.PreparedFetch.ObjectType, Allors.Meta.M.PreparedFetch.OnBuild); 

		public PreparedFetchOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PreparedFetchOnBuildMethodInvocation;
			}
		}
	}public partial class LocalisedTextOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LocalisedTextOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.LocalisedText.ObjectType, Allors.Meta.M.LocalisedText.OnBuild); 

		public LocalisedTextOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocalisedTextOnBuildMethodInvocation;
			}
		}
	}public partial class LoginOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LoginOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Login.ObjectType, Allors.Meta.M.Login.OnBuild); 

		public LoginOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LoginOnBuildMethodInvocation;
			}
		}
	}public partial class PermissionOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation PermissionOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Permission.ObjectType, Allors.Meta.M.Permission.OnBuild); 

		public PermissionOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return PermissionOnBuildMethodInvocation;
			}
		}
	}public partial class SecurityTokenOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SecurityTokenOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.SecurityToken.ObjectType, Allors.Meta.M.SecurityToken.OnBuild); 

		public SecurityTokenOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SecurityTokenOnBuildMethodInvocation;
			}
		}
	}public partial class NotificationListOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NotificationListOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.NotificationList.ObjectType, Allors.Meta.M.NotificationList.OnBuild); 

		public NotificationListOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NotificationListOnBuildMethodInvocation;
			}
		}
	}public partial class TaskAssignmentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TaskAssignmentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaskAssignment.ObjectType, Allors.Meta.M.TaskAssignment.OnBuild); 

		public TaskAssignmentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskAssignmentOnBuildMethodInvocation;
			}
		}
	}public partial class TaskListOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation TaskListOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.TaskList.ObjectType, Allors.Meta.M.TaskList.OnBuild); 

		public TaskListOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return TaskListOnBuildMethodInvocation;
			}
		}
	}public partial class CounterOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CounterOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Counter.ObjectType, Allors.Meta.M.Counter.OnBuild); 

		public CounterOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CounterOnBuildMethodInvocation;
			}
		}
	}public partial class RoleOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation RoleOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Role.ObjectType, Allors.Meta.M.Role.OnBuild); 

		public RoleOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return RoleOnBuildMethodInvocation;
			}
		}
	}public partial class UserGroupOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation UserGroupOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.UserGroup.ObjectType, Allors.Meta.M.UserGroup.OnBuild); 

		public UserGroupOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return UserGroupOnBuildMethodInvocation;
			}
		}
	}public partial class CurrencyOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CurrencyOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Currency.ObjectType, Allors.Meta.M.Currency.OnBuild); 

		public CurrencyOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CurrencyOnBuildMethodInvocation;
			}
		}
	}public partial class SingletonOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation SingletonOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Singleton.ObjectType, Allors.Meta.M.Singleton.OnBuild); 

		public SingletonOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return SingletonOnBuildMethodInvocation;
			}
		}
	}public partial class CountryOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation CountryOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Country.ObjectType, Allors.Meta.M.Country.OnBuild); 

		public CountryOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return CountryOnBuildMethodInvocation;
			}
		}
	}public partial class LanguageOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LanguageOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Language.ObjectType, Allors.Meta.M.Language.OnBuild); 

		public LanguageOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LanguageOnBuildMethodInvocation;
			}
		}
	}public partial class LocaleOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation LocaleOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Locale.ObjectType, Allors.Meta.M.Locale.OnBuild); 

		public LocaleOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return LocaleOnBuildMethodInvocation;
			}
		}
	}public partial class NotificationOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation NotificationOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.Notification.ObjectType, Allors.Meta.M.Notification.OnBuild); 

		public NotificationOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return NotificationOnBuildMethodInvocation;
			}
		}
	}public partial class AutomatedAgentOnBuild : ObjectOnBuild
	{
	    private static readonly Allors.Meta.MethodInvocation AutomatedAgentOnBuildMethodInvocation = new Allors.Meta.MethodInvocation(Allors.Meta.M.AutomatedAgent.ObjectType, Allors.Meta.M.AutomatedAgent.OnBuild); 

		public AutomatedAgentOnBuild(Object @object) : base(@object)
		{
		}

		public override Allors.Meta.MethodInvocation MethodInvocation
		{
			get
			{
				return AutomatedAgentOnBuildMethodInvocation;
			}
		}
	}
}